{"version":3,"sources":["firebase.js","screens/LoginScreen.js","screens/RegisterScreen.js","components/CustomListItems.js","screens/HomeScreen.js","screens/AddChatScreen.js","screens/ChatScreen.js","App.js"],"names":["db","firebase","length","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","LoginScreen","navigation","useState","email","setEmail","password","setPassword","useEffect","onAuthStateChanged","authUser","replace","View","style","styles","container","StatusBar","source","uri","width","height","inputContainer","placeholder","autoFocus","type","value","onChangeText","text","secureTextEntry","containerStyle","button","onPress","signInWithEmailAndPassword","catch","error","alert","title","navigate","StyleSheet","create","flex","alignItems","justifyContent","padding","backgroundColor","marginTop","RegisterScreen","name","setName","imageUrl","setImageUrl","useLayoutEffect","setOptions","headerBackTitle","register","createUserWithEmailAndPassword","then","user","updateProfile","displayName","photoURL","message","h3","marginBottom","onSubmitEditing","raised","CustomListItems","id","chatName","enterChat","chatMessages","setChatMessages","collection","doc","orderBy","onSnapshot","snapshot","docs","map","data","key","bottomDivider","rounded","Content","Title","fontWeight","Subtitle","numberOfLines","ellipsizeMode","HomeScreen","chats","setChats","signOutUser","signOut","headerStyle","headerTitleStyle","color","headerTintColor","headerLeft","marginLeft","TouchableOpacity","activeOpacity","currentUser","headerRight","flexDirection","marginRight","AntDesign","size","SimpleLineIcons","SafeAreaView","ScrollView","AddChatScreen","input","setInput","createChat","a","async","add","goBack","leftIcon","disabled","ChatScreen","route","messages","setMessages","headerBackTitleVisible","headerTitleAlign","headerTitle","Text","params","FontAwesome","Ionicons","sendMessage","Keyboard","dismiss","timestamp","FieldValue","serverTimestamp","KeyboardAvoidingView","behavior","Platform","OS","keyboardVerticalOffset","TouchableWithoutFeedback","contentContainerStyle","paddingTop","reciever","position","bottom","right","recieverText","sender","senderText","senderName","footer","TextInput","textInput","alignSelf","borderRadius","maxWidth","margin","left","paddingRight","fontSize","borderColor","borderWidth","Stack","createStackNavigator","globalScreenOptions","App","NavigationContainer","Navigator","screenOptions","Screen","component"],"mappings":"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","file":"static/js/app.7b73d0db.chunk.js","sourcesContent":["import * as firebase from \"firebase\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDqpNYVKQ0Q7rYFA58DvXJww_PIoikYxio\",\n  authDomain: \"mysignalclone.firebaseapp.com\",\n  projectId: \"mysignalclone\",\n  storageBucket: \"mysignalclone.appspot.com\",\n  messagingSenderId: \"774302186442\",\n  appId: \"1:774302186442:web:b893b137eee4cc2aeaed33\",\n  measurementId: \"G-JSQZBBYQTZ\",\n};\n\n//this is slightly different from the web apps, as we are inside an app and do not want to keep initializing the app\nlet app;\n\nif (firebase.apps.length === 0) {\n  app = firebase.initializeApp(firebaseConfig);\n} else {\n  app = firebase.app();\n}\n\nconst db = app.firestore(); //  setting up the database access variable\nconst auth = firebase.auth(); // setting up the firebase authentication variable\n\nexport { db, auth }; // access to firebase variables\n","import React, { useState, useEffect } from \"react\";\nimport { StyleSheet, Text, View } from \"react-native\";\nimport { Button, Input, Image } from \"react-native-elements\";\nimport { StatusBar } from \"expo-status-bar\";\nimport { KeyboardAvoidingView } from \"react-native\";\nimport { auth } from \"../firebase\";\n\nconst LoginScreen = ({ navigation }) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged((authUser) => {\n      if (authUser) {\n        navigation.replace(\"Home\");\n      }\n    });\n    return unsubscribe;\n  }, []);\n\n  const signIn = () => {\n    auth\n      .signInWithEmailAndPassword(email, password)\n      .catch((error) => alert(error));\n  };\n\n  return (\n    <View style={styles.container}>\n      {/*<KeyboardAvoidingView behavior=\"padding\" enabled style={styles.container}>I will decide whether to replace with View tags*/}\n      <StatusBar style=\"light\" />\n      <Image\n        source={{\n          uri:\n            \"https://blog.mozilla.org/internetcitizen/files/2018/08/signal-logo.png\",\n        }}\n        style={{ width: 200, height: 200 }}\n      />\n      <View style={styles.inputContainer}>\n        <Input\n          placeholder=\"Email\"\n          autoFocus\n          type=\"email\"\n          value={email}\n          onChangeText={(text) => setEmail(text)}\n        />\n        <Input\n          placeholder=\"Password\"\n          secureTextEntry\n          type=\"password\"\n          value={password}\n          onChangeText={(text) => setPassword(text)}\n        />\n      </View>\n      <Button containerStyle={styles.button} onPress={signIn} title=\"Login\" />\n      <Button\n        onPress={() => navigation.navigate(\"Register\")}\n        containerStyle={styles.button}\n        type=\"outline\"\n        title=\"Register\"\n      />\n      {/*<View style={{ height: 100 }} /> I will decide whether to add to code or not*/}\n      {/*</KeyboardAvoidingView> I will decide whether to replace with View tags*/}\n    </View>\n  );\n};\n\nexport default LoginScreen;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    padding: 10,\n    backgroundColor: \"white\",\n  },\n  inputContainer: {\n    width: 300,\n  },\n  button: {\n    width: 200,\n    marginTop: 10,\n  },\n});\n","import React, { useLayoutEffect, useState } from \"react\";\nimport { KeyboardAvoidingView } from \"react-native\";\nimport { StyleSheet, View } from \"react-native\";\nimport { Button, Input, Text } from \"react-native-elements\";\nimport { StatusBar } from \"expo-status-bar\";\nimport { NavigationHelpersContext } from \"@react-navigation/native\";\nimport { auth } from \"../firebase\";\n\nconst RegisterScreen = ({ navigation }) => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [imageUrl, setImageUrl] = useState(\"\");\n\n  useLayoutEffect(() => {\n    navigation.setOptions({\n      headerBackTitle: \"Login\",\n    });\n  }, [navigation]);\n\n  const register = () => {\n    auth\n      .createUserWithEmailAndPassword(email, password)\n      .then((authUser) => {\n        authUser.user.updateProfile({\n          displayName: name,\n          photoURL:\n            imageUrl ||\n            \"https://cencup.com/wp-content/uploads/2019/07/avatar-placeholder.png\",\n        });\n      })\n      .catch((error) => alert(error.message));\n  };\n\n  return (\n    <View style={styles.container}>\n      {/*<KeyboardAvoidingView behavior=\"padding\" style={styles.container}>*/}\n      <StatusBar style=\"light\" />\n      <Text h3 style={{ marginBottom: 50 }}>\n        Create a Signal account\n      </Text>\n      <View style={styles.inputContainer}>\n        <Input\n          placeholder=\"Full Name\"\n          autoFocus\n          type=\"text\"\n          value={name}\n          onChangeText={(text) => setName(text)}\n        />\n        <Input\n          placeholder=\"Email\"\n          type=\"email\"\n          value={email}\n          onChangeText={(text) => setEmail(text)}\n        />\n        <Input\n          placeholder=\"Password\"\n          type=\"password\"\n          secureTextEntry\n          value={password}\n          onChangeText={(text) => setPassword(text)}\n        />\n        <Input\n          placeholder=\"Profile Picture URL (optional)\"\n          type=\"text\"\n          value={imageUrl}\n          onChangeText={(text) => setImageUrl(text)}\n          onSubmitEditing={register}\n        />\n      </View>\n      <Button\n        containerStyle={styles.button}\n        raised\n        onPress={register}\n        title=\"Register\"\n      />\n      <View style={{ height: 10 }} />\n      {/*</KeyboardAvoidingView>*/}\n    </View>\n  );\n};\n\nexport default RegisterScreen;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    padding: 10,\n    backgroundColor: \"white\",\n  },\n  button: {\n    width: 200,\n    marginTop: 10,\n  },\n  inputContainer: {\n    width: 300,\n  },\n});\n","import React, { useState, useEffect } from \"react\";\nimport { StyleSheet, View, Text } from \"react-native\";\nimport { ListItem, Avatar } from \"react-native-elements\";\nimport { db } from \"../firebase\";\n\nconst CustomListItems = ({ id, chatName, enterChat }) => {\n  const [chatMessages, setChatMessages] = useState([]);\n\n  useEffect(() => {\n    const unsubscribe = db\n      .collection(\"chats\")\n      .doc(id)\n      .collection(\"messages\")\n      .orderBy(\"timestamp\", \"desc\")\n      .onSnapshot((snapshot) =>\n        setChatMessages(snapshot.docs.map((doc) => doc.data()))\n      );\n    return unsubscribe;\n  }, []);\n  return (\n    <ListItem\n      key={id}\n      onPress={() => enterChat(id, chatName)}\n      key={id}\n      bottomDivider\n    >\n      <Avatar\n        rounded\n        source={{\n          uri:\n            chatMessages?.[0]?.photoURL ||\n            \"https://cencup.com/wp-content/uploads/2019/07/avatar-placeholder.png\",\n        }}\n      />\n      <ListItem.Content>\n        <ListItem.Title style={{ fontWeight: \"bold\" }}>\n          {chatName}\n        </ListItem.Title>\n        <ListItem.Subtitle numberOfLines={1} ellipsizeMode=\"tail\">\n          {chatMessages?.[0]?.displayName}: {chatMessages?.[0]?.message}\n        </ListItem.Subtitle>\n      </ListItem.Content>\n    </ListItem>\n  );\n};\n\nexport default CustomListItems;\n\nconst styles = StyleSheet.create({});\n","import React, { useLayoutEffect, useState, useEffect } from \"react\";\nimport {\n  StyleSheet,\n  SafeAreaView,\n  ScrollView,\n  View,\n  Text,\n  TouchableOpacity,\n} from \"react-native\";\nimport { Avatar } from \"react-native-elements\";\nimport { AntDesign, SimpleLineIcons } from \"@expo/vector-icons\";\nimport CustomListItems from \"../components/CustomListItems\";\nimport { auth, db } from \"../firebase\";\n\nconst HomeScreen = ({ navigation }) => {\n  const [chats, setChats] = useState([]);\n  const signOutUser = () => {\n    auth.signOut().then(() => {\n      navigation.replace(\"Login\");\n    });\n  };\n\n  useEffect(() => {\n    const unsubscribe = db.collection(\"chats\").onSnapshot((snapshot) => {\n      setChats(\n        snapshot.docs.map((doc) => ({\n          id: doc.id,\n          data: doc.data(),\n        }))\n      );\n    });\n    return unsubscribe;\n  }, []);\n\n  //customize options using uselayout effect\n  useLayoutEffect(() => {\n    navigation.setOptions({\n      title: \"Signal\",\n      headerStyle: { backgroundColor: \"#fff\" },\n      headerTitleStyle: { color: \"black\" },\n      headerTintColor: \"black\",\n      headerLeft: () => (\n        <View style={{ marginLeft: 20 }}>\n          <TouchableOpacity activeOpacity={0.5} onPress={signOutUser}>\n            <Avatar rounded source={{ uri: auth?.currentUser?.photoURL }} />\n          </TouchableOpacity>\n        </View>\n      ), //custom component\n      headerRight: () => (\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            width: 80,\n            marginRight: 20,\n          }}\n        >\n          <TouchableOpacity activeOpacity={0.5}>\n            <AntDesign name=\"camerao\" size={24} color=\"black\" />\n          </TouchableOpacity>\n          <TouchableOpacity\n            onPress={() => navigation.navigate(\"AddChat\")}\n            activeOpacity={0.5}\n          >\n            <SimpleLineIcons name=\"pencil\" size={24} color=\"black\" />\n          </TouchableOpacity>\n        </View>\n      ),\n    });\n  }, [navigation]);\n\n  const enterChat = (id, chatName) => {\n    navigation.navigate(\"Chat\", {\n      id,\n      chatName,\n    });\n  };\n  return (\n    <SafeAreaView>\n      <ScrollView>\n        {chats.map(({ id, data: { chatName } }) => (\n          <CustomListItems\n            key={id}\n            id={id}\n            chatName={chatName}\n            enterChat={enterChat}\n          /> //the key allows effefient re-rendering of a list\n        ))}\n      </ScrollView>\n    </SafeAreaView>\n  );\n};\n\nexport default HomeScreen;\n\nconst styles = StyleSheet.create({\n  container: {\n    height: \"100%\",\n  },\n});\n","import React, { useLayoutEffect, useState } from \"react\";\nimport { StyleSheet, Text, View } from \"react-native\";\nimport { Button, Icon, Input } from \"react-native-elements\";\nimport { db } from \"../firebase\";\n\nconst AddChatScreen = ({ navigation }) => {\n  const [input, setInput] = useState(\"\");\n  useLayoutEffect(() => {\n    navigation.setOptions({\n      title: \"Add a new Chat\",\n      headerBackTitle: \"Chats\",\n    });\n  }, [navigation]);\n  const createChat = async () => {\n    await db\n      .collection(\"chats\")\n      .add({\n        chatName: input,\n      })\n      .then(() => {\n        navigation.goBack();\n      })\n      .catch((error) => alert(error));\n  };\n  return (\n    <View style={styles.container}>\n      <Input\n        placeholder=\"Enter a chat name\"\n        value={input}\n        onChangeText={(text) => setInput(text)}\n        onSubmitEditing={createChat}\n        leftIcon={\n          <Icon name=\"wechat\" type=\"antdesign\" size={24} color=\"black\" />\n        }\n      />\n      <Button disabled={!input} onPress={createChat} title=\"Create new Chat\" />\n    </View>\n  );\n};\n\nexport default AddChatScreen;\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"white\",\n    padding: 30,\n    height: \"100%\",\n  },\n});\n","import React, { useLayoutEffect, useState } from \"react\";\nimport { TouchableOpacity, TouchableWithoutFeedback } from \"react-native\";\nimport { StyleSheet, Text, View } from \"react-native\";\nimport { Avatar } from \"react-native-elements\";\nimport { AntDesign, FontAwesome, Ionicons } from \"@expo/vector-icons\";\nimport { SafeAreaView } from \"react-native\";\nimport { StatusBar } from \"expo-status-bar\";\nimport { KeyboardAvoidingView } from \"react-native\";\nimport { TextInput } from \"react-native\";\nimport { Platform, ScrollView } from \"react-native\";\nimport { Keyboard } from \"react-native\";\nimport * as firebase from \"firebase\";\nimport { db, auth } from \"../firebase\";\n\nconst ChatScreen = ({ navigation, route }) => {\n  const [input, setInput] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  useLayoutEffect(() => {\n    navigation.setOptions({\n      title: \"Chat\",\n      headerBackTitleVisible: false,\n      headerTitleAlign: \"left\",\n      headerTitle: () => (\n        <View\n          style={{\n            flexDirection: \"row\",\n            alignItems: \"center\",\n          }}\n        >\n          <Avatar\n            rounded\n            source={{\n              uri: messages[0]?.data.photoURL,\n            }}\n          />\n          <Text style={{ color: \"white\", marginLeft: 10, fontWeight: \"700\" }}>\n            {route.params.chatName}\n          </Text>\n        </View>\n      ),\n      headerLeft: () => (\n        <TouchableOpacity\n          style={{ marginLeft: 10 }}\n          onPress={navigation.goBack}\n        >\n          <AntDesign name=\"arrowleft\" size={24} color=\"white\" />\n        </TouchableOpacity>\n      ),\n      headerRight: () => (\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            width: 80,\n            marginRight: 20,\n          }}\n        >\n          <TouchableOpacity>\n            <FontAwesome name=\"video-camera\" size={24} color=\"white\" />\n          </TouchableOpacity>\n          <TouchableOpacity>\n            <Ionicons name=\"call\" size={24} color=\"white\" />\n          </TouchableOpacity>\n        </View>\n      ),\n    });\n  }, [navigation, messages]);\n\n  const sendMessage = () => {\n    Keyboard.dismiss();\n    db.collection(\"chats\").doc(route.params.id).collection(\"messages\").add({\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n      message: input,\n      displayName: auth.currentUser.displayName,\n      email: auth.currentUser.email,\n      photoURL: auth.currentUser.photoURL,\n    });\n    setInput(\"\");\n  };\n  useLayoutEffect(() => {\n    const unsubscribe = db\n      .collection(\"chats\")\n      .doc(route.params.id)\n      .collection(\"messages\")\n      .orderBy(\"timestamp\", \"desc\")\n      .onSnapshot((snapshot) =>\n        setMessages(\n          snapshot.docs.map((doc) => ({ id: doc.id, data: doc.data() }))\n        )\n      );\n    return unsubscribe;\n  }, [route]);\n\n  return (\n    <SafeAreaView style={{ flex: 1, backgroundColor: \"white\" }}>\n      <StatusBar style=\"light\" />\n      <KeyboardAvoidingView\n        behavior={Platform.OS === \"android\" ? \"padding\" : \"height\"}\n        style={styles.container}\n        keyboardVerticalOffset={90}\n      >\n        <TouchableWithoutFeedback onPress={Keyboard.dismiss}>\n          <>\n            <ScrollView contentContainerStyle={{ paddingTop: 15 }}>\n              {/*Chat goes here */}\n              {messages.map(({ id, data }) =>\n                data.email === auth.currentUser.email ? (\n                  <View key={id} style={styles.reciever}>\n                    <Avatar\n                      position=\"absolute\"\n                      rounded\n                      //WEB\n                      containerStyle={{\n                        position: \"absolute\",\n                        bottom: -15,\n                        right: -5,\n                      }}\n                      //END OF WEB STYLING\n                      bottom={-15}\n                      right={-5}\n                      size={30}\n                      source={{ uri: data.photoURL }}\n                    />\n                    <Text style={styles.recieverText}>{data.message}</Text>\n                  </View>\n                ) : (\n                  <View key={id} style={styles.sender}>\n                    <Avatar\n                      position=\"absolute\"\n                      rounded\n                      //WEB\n                      containerStyle={{\n                        position: \"absolute\",\n                        bottom: -15,\n                        right: -5,\n                      }}\n                      //END OF WEB STYLING\n                      bottom={-15}\n                      right={-5}\n                      size={30}\n                      source={{ uri: data.photoURL }}\n                    />\n                    <Text style={styles.senderText}>{data.message}</Text>\n                    <Text style={styles.senderName}>{data.displayName}</Text>\n                  </View>\n                )\n              )}\n            </ScrollView>\n            <View style={styles.footer}>\n              <TextInput\n                value={input}\n                onChangeText={(text) => setInput(text)}\n                onSubmitEditing={sendMessage}\n                placeholder=\"Signal Message\"\n                style={styles.textInput}\n              />\n              <TouchableOpacity onPress={sendMessage} activeOpacity={0.5}>\n                <Ionicons name=\"send\" size={24} color=\"#2B68E6\" />\n              </TouchableOpacity>\n            </View>\n          </>\n        </TouchableWithoutFeedback>\n      </KeyboardAvoidingView>\n    </SafeAreaView>\n  );\n};\n\nexport default ChatScreen;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  reciever: {\n    padding: 15,\n    backgroundColor: \"#ECECEC\",\n    alignSelf: \"flex-end\",\n    borderRadius: 20,\n    marginRight: 15,\n    marginBottom: 20,\n    maxWidth: \"80%\",\n    position: \"relative\",\n  },\n  sender: {\n    padding: 15,\n    backgroundColor: \"#2B68E6\",\n    alignSelf: \"flex-start\",\n    borderRadius: 20,\n    margin: 15,\n    maxWidth: \"80%\",\n    position: \"relative\",\n  },\n  senderText: {\n    color: \"white\",\n    fontWeight: \"500\",\n    marginLeft: 10,\n    marginBottom: 15,\n  },\n  recieverText: {\n    color: \"black\",\n    fontWeight: \"500\",\n    marginLeft: 10,\n  },\n  senderName: {\n    left: 10,\n    paddingRight: 10,\n    fontSize: 10,\n    color: \"white\",\n  },\n\n  footer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    width: \"100%\",\n    padding: 15,\n  },\n  textInput: {\n    bottom: 0,\n    height: 40,\n    flex: 1,\n    marginRight: 15,\n    borderColor: \"transparent\",\n    backgroundColor: \"#ECECEC\",\n    borderWidth: 1,\n    padding: 10,\n    color: \"grey\",\n    borderRadius: 30,\n  },\n});\n","import \"react-native-gesture-handler\";\nimport { StatusBar } from \"expo-status-bar\";\nimport React from \"react\";\nimport { StyleSheet, Text, View } from \"react-native\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport LoginScreen from \"./screens/LoginScreen\";\nimport RegisterScreen from \"./screens/RegisterScreen\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport AddChatScreen from \"./screens/AddChatScreen\";\nimport ChatScreen from \"./screens/ChatScreen\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\n\nconst Stack = createStackNavigator();\nconst globalScreenOptions = {\n  headerStyle: { backgroundColor: \"#2C6BED\" },\n  headerTitleStyle: { color: \"white\" },\n  headerTintColor: \"white\",\n};\n\nexport default function App() {\n  return (\n    <NavigationContainer>\n      <Stack.Navigator\n        //initialRouteName=\"Home\"\n        screenOptions={globalScreenOptions}\n      >\n        <Stack.Screen name=\"Login\" component={LoginScreen} />\n        <Stack.Screen name=\"Register\" component={RegisterScreen} />\n        <Stack.Screen name=\"Home\" component={HomeScreen} />\n        <Stack.Screen name=\"AddChat\" component={AddChatScreen} />\n        <Stack.Screen name=\"Chat\" component={ChatScreen} />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n});\n"],"sourceRoot":""}